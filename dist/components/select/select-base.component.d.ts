import { OnInit, OnChanges, OnDestroy } from '@angular/core';
import { ControlValueAccessor, FormControl } from '@angular/forms';
import { Subscription } from 'rxjs/Subscription';
import { Subject } from 'rxjs/Subject';
import { SelectorServiceInjector, SelectorService, Selectable, SelectorItem } from '../../services';
export declare class AfcSelectBase implements OnInit, OnChanges, OnDestroy, ControlValueAccessor {
    protected services: SelectorServiceInjector;
    protected _service: SelectorService;
    formControl: FormControl;
    sourceName: string;
    label: string;
    valueType: string;
    list: SelectorItem[];
    rejects: any[];
    value: any;
    data: Selectable[];
    id: string;
    required: boolean;
    readonly _required: boolean;
    innerFormControl: FormControl;
    protected dataPrepared$: Subject<{}>;
    protected writeValue$: Subject<{}>;
    protected subscriptions: Subscription;
    private initialized$;
    private onChangeEventPrepared$;
    private defaultValue;
    private querySubscription;
    onChangePropagate: any;
    constructor(services: SelectorServiceInjector);
    ngOnInit(): void;
    ngOnChanges(changes: any): void;
    ngOnDestroy(): void;
    protected query(): void;
    protected existsInSelector(val: any): boolean;
    private observer();
    private _parse(sourceName);
    private validateInnerFormValue();
    writeValue(value: any): void;
    registerOnChange(fn: any): void;
    registerOnTouched(_: any): void;
    private isEffectiveValue(value);
}
