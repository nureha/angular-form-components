{
  "version": 3,
  "file": "angular-form-components.js",
  "sources": [
    "ng://angular-form-components/out/angular-form-components.module.ts",
    "ng://angular-form-components/out/components/select/radio.component.ts",
    "ng://angular-form-components/out/components/select/checkbox.component.ts",
    "ng://angular-form-components/out/components/select/select2.component.ts",
    "ng://angular-form-components/out/components/select/select.component.ts",
    "ng://angular-form-components/out/components/select/select-base.component.ts",
    "ng://angular-form-components/out/services/selector-service-injector.ts",
    "ng://angular-form-components/out/services/filter.service.ts",
    "ng://angular-form-components/out/components/number/number.component.ts",
    "ng://angular-form-components/out/components/textarea/textarea.component.ts",
    "ng://angular-form-components/out/components/validate-message/validate-message.component.ts",
    "ng://angular-form-components/out/components/input/input.component.ts"
  ],
  "sourcesContent": [
    "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { AfmInputComponent } from './components/input/input.component';\nimport { AfmValidateMessageComponent } from './components/validate-message/validate-message.component';\nimport { AfmTextareaComponent } from './components/textarea/textarea.component';\nimport { AfmNumberComponent } from './components/number/number.component';\nimport { AfmSelectComponent, AfmCheckboxComponent, AfmRadioComponent, AfmSelect2Component } from './components/select';\nimport { AfmSingleCheckboxComponent } from 'components/single-checkbox/single-checkbox.component';\n\nexport const COMPONENTS = [\n  AfmInputComponent,\n  AfmNumberComponent,\n  AfmTextareaComponent,\n  AfmValidateMessageComponent,\n  AfmSelectComponent,\n  AfmCheckboxComponent,\n  AfmRadioComponent,\n  AfmSelect2Component,\n  AfmSingleCheckboxComponent,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  providers: [\n  ],\n  declarations: [...COMPONENTS],\n  exports:[...COMPONENTS]\n})\nexport class AngularFormComponentsModule {}\n",
    "import { Component, Input, forwardRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, FormControl } from '@angular/forms';\n\nimport { SelectorServiceInjector, Selectable } from '../../services';\nimport { AfmSelectBase } from './select-base.component';\n\n@Component({\n  selector: 'afm-radio',\n  template: `<p *ngIf=\"!!label\"><span [hidden]=\"!required\">*&nbsp;</span>{{ label }}</p>\n<label htmlFor=\"{{ id }}_{{ item.forSelectValue }}\" *ngFor=\"let item of data\" class=\"radio-inline custom-radio nowrap\">\n  <input id=\"{{ id }}_{{ item.forSelectValue }}\" type=\"radio\" class=\"form-control\" name=\"{{ id }}\"\n    [value]=\"item.forSelectValue\" [formControl]=\"innerFormControl\">\n  <span [innerHtml]=\"item.forSelectName\"></span>\n</label>\n<br>\n<validate-message [control]=\"formControl\"><ng-content></ng-content></validate-message>\n`,\n  styles: [`label.margin-bottom{margin-bottom:20px}span.selected{text-decoration:underline;-webkit-text-decoration-style:double;text-decoration-style:double}p.fit{margin-bottom:0}`],\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => AfmRadioComponent),\n    multi: true\n  },\n    SelectorServiceInjector\n  ]\n})\nexport class AfmRadioComponent extends AfmSelectBase {\n\n  @Input() formControl: FormControl;\n  @Input() sourceName: string;\n  @Input() label: string;\n  @Input() valueType = 'number';\n  @Input() list: any[] = [];\n  @Input() rejects: any[] = [];\n\n  constructor(\n    services: SelectorServiceInjector\n  ) {\n    super(services);\n  }\n\n}\n",
    "import { Component, Input, forwardRef, OnInit, Inject } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, FormControl } from '@angular/forms';\nimport { filter, combineLatest, delay } from 'rxjs/operators';\n\nimport { FilterService } from '../../services';\nimport { SelectorServiceInjector, Selectable } from '../../services';\nimport { AfmSelectBase } from './select-base.component';\n\n@Component({\n  selector: 'afm-checkbox',\n  template: `<p>{{ label }}</p>\n<div *ngIf=\"!!filter\">\n  <div class=\"form-group col-md-12\">\n    <div class=\"col-md-2\">\n      <p class=\"fit\">表示中の選択肢すべてを</p>\n      <button type=\"button\" class=\"btn btn-info btn-sm\" (click)=\"allCheck()\">選択</button>\n      <button type=\"button\" class=\"btn btn-warning btn-sm\" (click)=\"allClear()\">クリア</button>\n    </div>\n  </div>\n</div>\n<label class=\"checkbox-inline hidden\"></label>\n<label htmlFor=\"{{ id }}_{{ item.forSelectValue }}\" *ngFor=\"let item of filteredData\"\n    class=\"checkbox-inline custom-checkbox nowrap margin-bottom\">\n  <input id=\"{{ id }}_{{ item.forSelectValue }}\" type=\"checkbox\" class=\"form-control\"\n    (change)=\"onChange($event, item.forSelectValue)\" [checked]=\"value.indexOf(item.forSelectValue) !== -1\">\n  <span [ngClass]=\"{'selected': value.indexOf(item.forSelectValue) !== -1}\"\n    [style.width]=\"width\" [innerHtml]=\"item.forSelectName\"></span>\n</label>\n<br>\n<validate-message [control]=\"formControl\"><ng-content></ng-content></validate-message>\n`,\n  styles: [`label.margin-bottom{margin-bottom:20px}span.selected{text-decoration:underline;-webkit-text-decoration-style:double;text-decoration-style:double}p.fit{margin-bottom:0}`],\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => AfmCheckboxComponent),\n    multi: true\n  },\n    SelectorServiceInjector\n  ]\n})\nexport class AfmCheckboxComponent extends AfmSelectBase implements OnInit {\n\n  @Input() formControl: FormControl;\n  @Input() sourceName: string;\n  @Input() label: string;\n  @Input() valueType = 'number';\n  @Input() list: any[] = [];\n  @Input() rejects: any[] = [];\n  @Input() filter: FilterService;\n  public filteredData: Selectable[] = [];\n  public width = '';\n  public selectedNames: string[] = [];\n  protected _value: any[];\n  private _detaPrepared = false;\n\n  get value() {\n    return this._value instanceof Array ? this._value : [this._value];\n  }\n  set value(value) {\n    this._value = value instanceof Array ? value : value !== null ? [value] : [];\n    this.onChangePropagate(this.value);\n    this.selectedNames = this.data.filter(l => this._value.indexOf(l.forSelectValue) !== -1).map(l => l.forSelectName);\n  }\n\n  constructor(\n    services: SelectorServiceInjector\n  ) {\n    super(services);\n    this.dataPrepared$.subscribe(v => this._detaPrepared = !!v);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    if (this.filter) {\n      this.subscriptions.add(this.dataPrepared$\n      .pipe(\n        filter(v => !!v),\n        combineLatest(this.filter.onChange),\n        delay(0)\n      )\n      .subscribe(v => {\n        this.filteredData = this.filter.filter(this.data);\n        // FIXME for magic number\n        if (this.filteredData.length > 9) {\n          this.width = (this.filteredData.reduce((prev, d) => {\n            // 実際の文字数より多い数が返る可能性があるが厳密な数値は必要ではないし、長い分には問題ない\n            return prev < d.forSelectName.length ? d.forSelectName.length : prev;\n          }, 0) * 15).toString() + 'px';\n        }\n      }));\n      this.filter.trigger();\n    } else {\n      this.subscriptions.add(this.dataPrepared$\n      .pipe(filter(v => !!v))\n      .subscribe(v => {\n        this.filteredData = this.data.filter(_ => true);\n      }));\n    }\n    // HACK: キャッシュから読む場合など↑でsubscribeする前にnextされてしまってる場合への対処\n    if (this._detaPrepared) {\n      this.dataPrepared$.next(true);\n    }\n  }\n\n  onChange($event, val): void {\n    if ($event.target.checked) {\n      if (this.valueType === 'object') {\n        val = this.data.find(l => l.forSelectValue === val);\n      }\n      this.value = [\n        ...this.value.filter(v => !!v),\n        val\n      ];\n    } else {\n      if (this.valueType === 'object') {\n        this.value = this.value.filter(v => !!v && v.value !== val);\n      } else {\n        this.value = this.value.filter(v => v !== val);\n      }\n    }\n  }\n\n  allCheck() {\n    this.value = [\n      ...this._value,\n      ...this.filteredData.filter(d => this._value.indexOf(d.forSelectValue) === -1).map(d => d.forSelectValue)\n    ];\n  }\n\n  allClear() {\n    const filteredDataArray = this.filteredData.map(d => d.forSelectValue);\n    this.value = this._value.filter(v => filteredDataArray.indexOf(v) === -1);\n  }\n\n  protected existsInSelector(val): boolean {\n    const _val = (!val || val instanceof Array) ? val : [val];\n    return !_val || !_val.length || _val.reduce((prev, curr) => {\n      return prev || this.data.some(item => item.forSelectValue === curr);\n    }, false);\n  }\n\n  writeValue(val) {\n    this._value = val;\n    this.innerFormControl.patchValue(val);\n  }\n\n}\n",
    "import { Component, Input, ViewChild, ElementRef, OnInit, AfterViewInit, OnDestroy, forwardRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, FormControl } from '@angular/forms';\nimport { Subscription } from 'rxjs/Subscription';\nimport { Subject } from 'rxjs/Subject';\nimport { filter, combineLatest, delay } from 'rxjs/operators';\n\nimport { SelectorServiceInjector, Selectable } from '../../services';\nimport { AfmSelectBase } from './select-base.component';\ndeclare const jQuery: any;\n\n@Component({\n  selector: 'afm-select2',\n  template: `<label><span [hidden]=\"!required\">*&nbsp;</span>{{ label }}</label>\n<ng-container *ngIf=\"!readonly\">\n  <div>\n    <select #selector class=\"form-control\"></select>\n    <validate-message [control]=\"formControl\"><ng-content></ng-content></validate-message>\n  </div>\n</ng-container>\n<ng-container *ngIf=\"readonly\">\n  <span class=\"form-control\" readonly [innerHtml]=\"selected?.forSelectName\"></span>\n</ng-container>\n`,\n  styles: [``],\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => AfmSelect2Component),\n    multi: true\n  },\n    SelectorServiceInjector\n  ]\n})\nexport class AfmSelect2Component extends AfmSelectBase implements OnInit, AfterViewInit, OnDestroy {\n\n  @Input() formControl: FormControl;\n  @Input() sourceName: string;\n  @Input() label: string;\n  @Input() valueType = 'number';\n  @Input() list: any[];\n  @Input() rejects: any[] = [];\n  @Input() placeholder = '';\n  @Input() set readonly(flag: boolean) {\n    this._readonly = flag;\n  }\n  get readonly() {\n    return this._readonly;\n  }\n  private _readonly = false;\n  public selected: Selectable = null;\n  @ViewChild('selector') selector: ElementRef;\n  set data(data: Selectable[]) {\n    this._data = data;\n    this.renderSelect2();\n  }\n  get data() {\n    return this._data;\n  }\n  private _data: Selectable[] = [];\n  private element: any;\n  private valueTrigger$ = new Subject();\n  private preparedElement$ = new Subject();\n  protected _value: any;\n  private mySubscriptions = new Subscription();\n\n  onChangePropagate: any = () => {};\n\n  constructor(service: SelectorServiceInjector) {\n    super(service);\n    this.mySubscriptions.add(\n      this.dataPrepared$.pipe(\n        combineLatest(this.preparedElement$),\n        filter(v => !!v[0] && !!v[1]),\n        combineLatest(this.valueTrigger$),\n        delay(0)\n      ).subscribe(v => {\n        if (this.element) {\n          this.element.val(v[1]).trigger('change').trigger('select2:select');\n        }\n        this.selected = this._data.find(d => d.forSelectValue === v[1]);\n      })\n    );\n  }\n\n  ngAfterViewInit() {\n    if (this.selector) {\n      this.element = jQuery(this.selector.nativeElement);\n      this.renderSelect2();\n      this.element.on('select2:select', () => {\n        let val = this.selector.nativeElement.value;\n        // FIXME 文字列だけど数字だけの値を扱うこともあるかもしれない・・・\n        if (/^[0-9]+$/.test(val)) {\n          val = parseInt(val, 10);\n        }\n        if (this._value !== val) {\n          if (this.valueType === 'object') {\n            val = this.data.find(l => l.forSelectValue === val);\n          }\n          this._value = val;\n          this.onChangePropagate(val);\n        }\n      });\n    }\n    this.preparedElement$.next(true);\n    // default値設定のときだけ\n    this.mySubscriptions.add(\n      this.innerFormControl.valueChanges.subscribe(v => {\n        this.valueTrigger$.next(v);\n      })\n    );\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this.mySubscriptions.unsubscribe();\n    if (this.element) {\n      this.element.off('select2:select');\n    }\n  }\n\n  private renderSelect2() {\n    if (!this.element) {\n      return;\n    }\n    if (this.element.hasClass('select2-hidden-accessible') === true) {\n      this.element.select2('destroy');\n      this.element.html('');\n    }\n    this.element.select2({\n      data: this._data.map(d => {\n        return { id: d.forSelectValue, text: d.forSelectName };\n      }),\n      theme: 'bootstrap',\n      placeholder: this.placeholder,\n      allowClear: !this._required\n    });\n    this.valueTrigger$.next(this.formControl.value);\n  }\n\n}\n",
    "import { Component, Input, forwardRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, FormControl } from '@angular/forms';\nimport { filter, combineLatest } from 'rxjs/operators';\n\nimport { SelectorServiceInjector, Selectable } from '../../services';\nimport { AfmSelectBase } from './select-base.component';\n\n@Component({\n  selector: 'afm-select',\n  template: `<label *ngIf=\"label\" [htmlFor]=\"id\"><span [hidden]=\"!required\">*&nbsp;</span>{{ label }}</label>\n<ng-container *ngIf=\"!readonly\">\n  <select [id]=\"id\" class=\"form-control\" [formControl]=\"innerFormControl\" [required]=\"required\">\n    <option *ngIf=\"!required\" [ngValue]=\"null\"></option>\n    <option *ngFor=\"let item of data\" [ngValue]=\"item.forSelectValue\" [innerHtml]=\"item.forSelectName\"></option>\n  </select>\n  <validate-message [control]=\"formControl\"><ng-content></ng-content></validate-message>\n</ng-container>\n<ng-container *ngIf=\"readonly\">\n  <span class=\"form-control\" readonly [innerHtml]=\"selected?.forSelectName\"></span>\n</ng-container>\n`,\n  styles: [`label.margin-bottom{margin-bottom:20px}span.selected{text-decoration:underline;-webkit-text-decoration-style:double;text-decoration-style:double}p.fit{margin-bottom:0}`],\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => AfmSelectComponent),\n    multi: true\n  },\n    SelectorServiceInjector\n  ]\n})\nexport class AfmSelectComponent extends AfmSelectBase {\n\n  @Input() formControl: FormControl;\n  @Input() sourceName: string;\n  @Input() label: string;\n  @Input() valueType = 'number';\n  @Input() list: any[] = [];\n  @Input() rejects: any[] = [];\n  @Input() set readonly(flag: boolean) {\n    this._readonly = flag;\n  }\n  get readonly() {\n    return this._readonly;\n  }\n  public selected: Selectable = null;\n  private _readonly = false;\n\n  constructor(\n    services: SelectorServiceInjector\n  ) {\n    super(services);\n    this.dataPrepared$.pipe(\n      filter(v => !!v),\n      combineLatest(this.innerFormControl.valueChanges)\n    ).subscribe(v => {\n      this.selected = this.data.find(d => d.forSelectValue === v[1]);\n    });\n  }\n\n}\n",
    "import { OnInit, OnChanges, OnDestroy } from '@angular/core';\nimport { ControlValueAccessor, FormControl, Validators } from '@angular/forms';\nimport { Observable } from 'rxjs/Observable';\nimport { ReplaySubject } from 'rxjs/ReplaySubject';\nimport { Subscription } from 'rxjs/Subscription';\nimport { Subject } from 'rxjs/Subject';\nimport { combineLatest, share, filter } from 'rxjs/operators';\n\nimport { SelectorServiceInjector, SelectorService, Selectable, SelectorItem } from '../../services';\n\nclass SelectableConstruct extends Selectable implements SelectorItem {\n  name: string;\n  value: any;\n  default: boolean;\n  sort: string|number;\n  get forSelectName() {\n    return this.name;\n  }\n  get forSelectValue() {\n    return this.value;\n  }\n  get forSelectDefault() {\n    return this.default;\n  }\n  get forSelectOrder() {\n    return this.sort;\n  }\n\n  constructor(data: SelectorItem) {\n    super();\n    this.name = data.name;\n    this.value = data.value;\n    this.default = data.default;\n    this.sort = data.sort !== undefined ? data.sort : data.name;\n  }\n}\n\nclass ArrayService implements SelectorService {\n  private action$ = new ReplaySubject<Selectable[]>(1);\n  constructor() {}\n  list() {\n    return this.action$.pipe(share());\n  }\n  query(list: SelectorItem[]) {\n    this.action$.next(list.map(l => {\n      if (l instanceof Selectable) {\n        return l;\n      }\n      return new SelectableConstruct(l);\n    }));\n  }\n}\n\nlet id = 0;\n\nexport class AfmSelectBase implements OnInit, OnChanges, OnDestroy, ControlValueAccessor {\n\n  protected _service: SelectorService;\n\n  /* @Input */ formControl: FormControl;\n  /* @Input */ sourceName: string;\n  /* @Input */ label: string;\n  /* @Input */ valueType: string;\n  /* @Input */ list: SelectorItem[] = [];\n  /* @Input */ rejects: any[] = [];\n\n  set value(value) {\n    this.onChangePropagate(value);\n  }\n\n  public data: Selectable[];\n  public id: string;\n  public required: boolean;\n  public get _required() {\n    const err = this.formControl.validator && this.formControl.validator(new FormControl());\n    this.required = !!err && !!err['required'];\n    if (this.required) {\n      this.innerFormControl.setValidators(Validators.required);\n    } else {\n      this.innerFormControl.clearValidators();\n    }\n    return this.required;\n  }\n  // valueTypeに関わらずforSelectValueを保持する\n  public innerFormControl = new FormControl();\n  protected dataPrepared$ = new Subject();\n  protected writeValue$ = new Subject();\n  protected subscriptions = new Subscription();\n  private initialized$ = new Subject();\n  private onChangeEventPrepared$ = new Subject();\n  private defaultValue: any = null;\n  private querySubscription: Subscription;\n\n  onChangePropagate: any = () => {};\n\n  constructor(\n    protected services: SelectorServiceInjector\n  ) {\n    this.subscriptions.add(this.dataPrepared$.pipe(filter(v => !!v)).pipe(\n      combineLatest(this.initialized$.pipe(filter(v => !!v))),\n      combineLatest(this.onChangeEventPrepared$.pipe(filter(v => !!v))),\n      combineLatest(this.writeValue$),\n    ).subscribe(v => {\n        let value = <any>v[1];\n        if (value || value === 0) {\n          if (typeof value === 'object' && value.forSelectValue) {\n            value = value.forSelectValue;\n          }\n          this.innerFormControl.patchValue(value);\n          if (!this.validateInnerFormValue()) {\n            this.innerFormControl.patchValue(!this.defaultValue ? this.defaultValue : this.defaultValue.forSelectValue);\n          }\n        } else if (this.innerFormControl.value || this.innerFormControl.value === 0) {\n          this.value = this.innerFormControl.value;\n        }\n      }));\n    this.subscriptions.add(this.dataPrepared$.pipe(filter(v => !!v)).pipe(\n      combineLatest(this.initialized$.pipe(filter(v => !!v))),\n      combineLatest(this.onChangeEventPrepared$.pipe(filter(v => !!v))),\n      combineLatest(this.innerFormControl.valueChanges),\n    ).subscribe(v => {\n        if (this.data && this.valueType === 'object') {\n          v[1] = this.data.find(d => d.forSelectValue === v[1]);\n        }\n        this.value = v[1];\n      }));\n  }\n\n  ngOnInit() {\n    this.id = '_AfmSelect_' + id.toString();\n    id++;\n    this.required = this._required;\n    this.subscriptions.add(this.observer().subscribe(d => {\n      d.sort((a: Selectable, b: Selectable) => {\n        if (a.forSelectOrder > b.forSelectOrder) {\n          return 1;\n        } else if (a.forSelectOrder < b.forSelectOrder) {\n          return -1;\n        }\n        return 0;\n      });\n      this.defaultValue = null;\n      this.data = d.filter(item => {\n        return this.rejects.length === 0 || this.rejects.indexOf(item.forSelectValue) === -1;\n      }).map(item => {\n        if (item.forSelectDefault || this.defaultValue === null) {\n          this.defaultValue = item;\n        }\n        return item;\n      });\n      this.dataPrepared$.next(true);\n      if (!this.validateInnerFormValue()) {\n        if (this._required) {\n          this.writeValue$.next(!this.defaultValue ? this.defaultValue : this.defaultValue.forSelectValue);\n        } else {\n          this.value = null;\n        }\n      }\n    }));\n    this.query();\n    this.initialized$.next(true);\n  }\n\n  ngOnChanges(changes) {\n    if (\n      changes['sourceName'] && changes['sourceName'].currentValue !== changes['sourceName'].previousValue ||\n      changes['list'] && changes['list'].currentValue.length !== changes['list'].previousValue.length ||\n      changes['rejects'] && changes['rejects'].currentValue.length !== changes['rejects'].previousValue.length\n    ) {\n      if (this._service) {\n        this.query();\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.unsubscribe();\n  }\n\n  protected query() {\n    this.dataPrepared$.next(false);\n    const parsed = this._parse(this.sourceName);\n    if ((parsed.name === 'list' || parsed.name === 'range') && this.list) {\n      this._service.query(this.list);\n    } else {\n      this._service.query(parsed.query);\n    }\n  }\n\n  protected existsInSelector(val): boolean {\n    if (!val && val !== 0) {\n      return false;\n    }\n    return this.data.some(item => item.forSelectValue === val);\n  }\n\n  private observer(): Observable<Selectable[]> {\n    if (!this._service) {\n      const parsed = this._parse(this.sourceName);\n      if (parsed.name === 'list') {\n        this._service = new ArrayService();\n      } else if (parsed.name === 'range') {\n        if (parsed.query['to'] === undefined) {\n          throw Error('range.to is required');\n        }\n        parsed.query['from'] = parseInt((parsed.query['from'] || 0), 10);\n        parsed.query['to'] = parseInt((parsed.query['to'] || 0), 10);\n        parsed.query['default'] = parseInt((parsed.query['default'] || 0), 10);\n        parsed.query['step'] = parseInt((parsed.query['step'] || 1), 10);\n        parsed.query['unit'] = parsed.query['unit'] || '';\n        this.list = [];\n        for (let i = parsed.query['from']; i <= parsed.query['to']; i += parsed.query['step']) {\n          this.list.push({\n            name: i.toString() + parsed.query['unit'],\n            value: i,\n            default: i === parsed.query['default'],\n          });\n        }\n        this._service = new ArrayService();\n      } else {\n        const dataSource = this.services.get(parsed.name);\n        if (!dataSource) {\n          throw Error('not exists service: ' + parsed.name);\n        }\n        this._service = dataSource;\n      }\n    }\n    return this._service.list();\n  }\n\n  private _parse(sourceName: string): {name: string, query: Object} {\n    const exploded = sourceName.split(':');\n    const query = {};\n    if (exploded[1]) {\n      exploded[1].split('&').forEach(keyValue => {\n        const kv = keyValue.split('=');\n        if (query[kv[0]] !== undefined) {\n          if (!(query[kv[0]] instanceof Array)) {\n            query[kv[0]] = [query[kv[0]]];\n          }\n          query[kv[0]].push(kv[1]);\n        } else {\n          query[kv[0]] = kv[1];\n        }\n      });\n    }\n    return {\n      name: exploded[0],\n      query: query\n    };\n  }\n\n  private validateInnerFormValue() {\n    return !(\n      this._required && !this.innerFormControl.value && this.innerFormControl.value !== 0 ||\n      !this.existsInSelector(this.innerFormControl.value) &&\n        (!!this.innerFormControl.value || this.innerFormControl.value === 0)\n    );\n  }\n\n  // for ControlValueAccessor\n  writeValue(value: any) {\n    if (!this.isEffectiveValue(value) && this._required) {\n      if (this.isEffectiveValue(this.defaultValue)) {\n        this.writeValue$.next(this.defaultValue.forSelectValue);\n      } else if (this.isEffectiveValue(this.innerFormControl.value)) {\n        this.writeValue$.next(this.innerFormControl.value);\n      }\n      return;\n    }\n    this.writeValue$.next(value);\n  }\n  registerOnChange(fn: any) {\n    this.onChangePropagate = fn;\n    this.onChangeEventPrepared$.next(true);\n  }\n  registerOnTouched(_: any) {}\n\n  private isEffectiveValue(value) {\n    return !!value || value === 0;\n  }\n\n}\n",
    "import { Injectable, Injector, InjectionToken, ReflectiveInjector, Inject, Provider } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Subscription } from 'rxjs/Subscription';\n\nexport interface SelectorItem {\n  name: string;\n  value: string|number;\n  default: boolean;\n  sort?: string|number;\n}\n\nexport abstract class Selectable {\n  get forSelectName(): string { throw new Error('unimplemented'); }\n  get forSelectValue(): any { throw new Error('unimplemented'); }\n  get forSelectDefault(): boolean {\n    return false;\n  }\n  get forSelectOrder(): any { throw new Error('unimplemented'); }\n}\n\nexport interface SelectorService {\n  list(): Observable<Selectable[]>;\n  query(_: any): void;\n}\n\nexport interface SelectorServiceMap {\n  map: Map<string, SelectorService>;\n}\n\nexport const MULTI_IMPORT_SERVICES_MAP = new InjectionToken<SelectorServiceMap>('MULTI_IMPORT_SERVICES_MAP');\n\n@Injectable()\nexport class SelectorServiceInjector {\n\n  private providers: SelectorService[];\n\n  constructor(\n    private injector: Injector,\n    @Inject(MULTI_IMPORT_SERVICES_MAP) private services: SelectorServiceMap,\n  ) {\n    this.providers = Array.from(this.services.map.values());\n  }\n\n  get(name: string): any {\n    const _class = this.services.map.get(name);\n    if (_class) {\n      const injector = ReflectiveInjector.resolveAndCreate(<any[]>this.providers, this.injector);\n      return injector.get(_class);\n    }\n    throw new Error(`${name} is not provided!`);\n  }\n\n}\n",
    "import { Injectable } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\nimport { merge } from 'rxjs/operators';\n\n@Injectable()\nexport class FilterService {\n    public get onChange() {\n      return this._onChange;\n    }\n    private action$ = new Subject();\n    private _val: any;\n    private _regExp = RegExp('.*');\n    private _onChange: Observable<any>;\n    private _and: FilterService[] = [];\n    private _or: FilterService[] = [];\n\n    static match(form: AbstractControl, target: string): FilterService {\n      return new FilterService(form.valueChanges, target, '~');\n    }\n    static equal(form: AbstractControl, target: string): FilterService {\n      return new FilterService(form.valueChanges, target, '=');\n    }\n    static graterThan(form: AbstractControl, target: string): FilterService {\n      return new FilterService(form.valueChanges, target, '>');\n    }\n    static over(form: AbstractControl, target: string): FilterService {\n      return new FilterService(form.valueChanges, target, '>=');\n    }\n    static lessThan(form: AbstractControl, target: string): FilterService {\n      return new FilterService(form.valueChanges, target, '<');\n    }\n    static under(form: AbstractControl, target: string): FilterService {\n      return new FilterService(form.valueChanges, target, '<=');\n    }\n\n    constructor(\n      private ob: Observable<any>,\n      private _target: string,\n      private _type: string,\n    ) {\n      ob.subscribe(v => {\n        this._val = v;\n        this._regExp = new RegExp(v);\n      });\n      this._onChange = this.action$.pipe(merge(ob));\n    }\n    private check(item: any): boolean {\n      if (!(this._target in item)) {\n        return false;\n      }\n      if (!this._val) {\n        return true;\n      }\n      switch (this._type) {\n        case '~':\n          return !this._val || this._regExp.test(item[this._target]);\n        case '=':\n          return item[this._target] === this._val;\n        case '>':\n          return item[this._target] > this._val;\n        case '>=':\n          return item[this._target] >= this._val;\n        case '<':\n          return item[this._target] < this._val;\n        case '<=':\n          return item[this._target] <= this._val;\n        default:\n          break;\n      }\n      return true;\n    }\n    private checkAll(item: any): boolean {\n      return (this._or.length > 0 && this._or.some(s => s.checkAll(item))) ||\n          this.check(item) &&\n          !this._and.some(s => !s.checkAll(item));\n    }\n    trigger() {\n      this.action$.next(true);\n    }\n    filter<T>(list: T[]): T[] {\n      return list.filter(l => this.checkAll(l));\n    }\n    and(s: FilterService) {\n      this._and.push(s);\n      this._onChange = this._onChange.pipe(merge(s.onChange));\n      return this;\n    }\n    or(s: FilterService) {\n      this._or.push(s);\n      this._onChange = this._onChange.pipe(merge(s.onChange));\n      return this;\n    }\n  }\n",
    "import {\n  Component, OnInit, AfterViewInit, Input, Output, EventEmitter,\n  forwardRef, Renderer2, ElementRef, HostListener\n} from '@angular/core';\nimport { FormControl, NG_VALUE_ACCESSOR, ControlValueAccessor, Validators } from '@angular/forms';\n\nfunction moveDigit(decimal: number, moves: number): number {\n  const nums = (decimal || 0).toString().split('.');\n  let prefix = '';\n  if (/^-/.test(nums[0])) {\n    prefix = '-';\n    nums[0] = nums[0].substring(1);\n  }\n  // 小数が 0.0e-00 形式だった場合\n  if (nums[1] && /e-/.test(nums[1])) {\n    const _nums1 = nums[1].split('e-');\n    nums[1] = '0.';\n    for (let i = 1; i < parseInt(_nums1[1], 10); ++i) {\n      nums[1] += '0';\n    }\n    nums[1] += _nums1[0].replace('.', '');\n  }\n  // 正の変換\n  if (moves > 0) {\n    // もともと整数だった場合\n    if (!nums[1]) {\n      return decimal * Math.pow(10, moves);\n    }\n    // 計算結果が整数になる場合\n    if (nums[1].length <= moves) {\n      return parseInt(prefix + nums[0] + nums[1], 10) * Math.pow(10, (moves - nums[1].length));\n    }\n    // それ以外の場合\n    return parseFloat(prefix + nums[0] + nums[1].substr(0, moves) + '.' + nums[1].substr(moves, (nums[1].length - moves)));\n  // 負の変換\n  } else {\n    let base = '0.';\n    if (nums[0] === '0') {\n      for (let i = 0; i > moves; --i) {\n        base += '0';\n      }\n      return parseFloat(prefix + base + nums[1]);\n    }\n    // 計算結果が1より小さくなる場合\n    if (nums[0].length <= -moves) {\n      for (let i = 0; i > (moves + nums[0].length); --i) {\n        base += '0';\n      }\n      return parseFloat(prefix + base + nums[0] + nums[1]);\n    }\n    // それ以外の場合\n    return parseFloat(prefix + nums[0].substr(0, nums[0].length + moves) + '.' + nums[0].substr(nums[0].length + moves, -moves) + nums[1]);\n  }\n}\n\nfunction numberFormat(num, underPoint = -1): string {\n  if (typeof num === 'object') {\n    return '';\n  }\n  if (underPoint > -1) {\n    num = moveDigit(Math.round(moveDigit(num, underPoint)), -underPoint);\n  }\n  return num.toString().split('.').map((str, index) => {\n    return index > 0 ? str : str.split('').reverse()\n      .map((s, i) => s += i && (i % 3 === 0) && s !== '-' ? ',' : '')\n      .reverse().join('');\n  }).join('.');\n}\n\n@Component({\n  selector: 'afm-number',\n  template: `<label *ngIf=\"label\"><span *ngIf=\"required\">*&nbsp;</span>{{ label }}</label>\n<input class=\"form-control\"\n  (blur)=\"onBlur()\"\n  type=\"number\" [formControl]=\"innerFormControl\">\n<input class=\"form-control\" (focus)=\"onFocus()\" [readonly]=\"readonly\">\n<validate-message [control]=\"formControl\"><ng-content></ng-content></validate-message>\n`,\n  styles: [``],\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => AfmNumberComponent),\n    multi: true\n  }]\n})\nexport class AfmNumberComponent implements OnInit, AfterViewInit, ControlValueAccessor {\n\n  @Input() formControl: FormControl;\n  @Input() label: string;\n  @Input() type = 'number'; // number|percent\n  @Input() afterPointNum = 2;\n  @Input() set readonly(flag: boolean) {\n    this._readonly = flag;\n    this.onBlur(true);\n  }\n  @Output() blur = new EventEmitter();\n  get readonly() {\n    return this._readonly;\n  }\n  public innerType: string;\n  public required: boolean;\n  public innerFormControl: FormControl = new FormControl();\n  get formatedValue() {\n    if (this.type === 'percent') {\n      return numberFormat(this.innerFormControl.value) + '%';\n    }\n    return numberFormat(this.innerFormControl.value);\n  }\n  private _readonly = false;\n  private realInput: any;\n  private dummyInput: any;\n\n  onChangePropagate: any = () => {};\n\n  @HostListener('keydown', ['$event.key'])\n  onKeyDown(key) {\n    switch (key) {\n      case 't':\n        this.innerFormControl.patchValue(moveDigit(this.innerFormControl.value, 3));\n        break;\n      case 'm':\n        this.innerFormControl.patchValue(moveDigit(this.innerFormControl.value, 6));\n        break;\n    }\n  }\n\n  constructor(\n    private renderer: Renderer2,\n    private elm: ElementRef\n  ) {}\n\n  ngOnInit() {\n    const err = this.formControl.validator && this.formControl.validator(new FormControl());\n    this.required = !!err && !!err['required'];\n    this.innerFormControl.setValidators(this.formControl.validator);\n    const inputs = Array.prototype.filter.call(this.elm.nativeElement.childNodes, c => c.nodeName === 'INPUT');\n    this.realInput = inputs[0];\n    this.dummyInput = inputs[1];\n    this.innerFormControl.valueChanges.subscribe(v => {\n      if (this.type === 'percent') {\n        v = moveDigit(v, -this.afterPointNum);\n      }\n      if (v !== this.formControl.value) {\n        this.onChangePropagate(v);\n      }\n    });\n  }\n\n  ngAfterViewInit() {\n    this.onBlur(true);\n  }\n\n  onBlur(noEmit = false) {\n    if (this.realInput) {\n      if (this.innerFormControl.value === '') {\n        this.innerFormControl.patchValue(0);\n      }\n      this.renderer.setStyle(this.realInput, 'display', 'none');\n      this.renderer.setStyle(this.dummyInput, 'display', 'inherit');\n      this.renderer.setProperty(this.dummyInput, 'value', this.formatedValue);\n    }\n    if (!noEmit) {\n      this.blur.emit();\n    }\n  }\n\n  onFocus() {\n    if (!this.readonly) {\n      this.renderer.setStyle(this.dummyInput, 'display', 'none');\n      this.renderer.setStyle(this.realInput, 'display', 'inherit');\n      if (this.innerFormControl.value === 0) {\n        this.innerFormControl.patchValue('');\n      }\n      if (this.elm.nativeElement['fucus']) {\n        this.elm.nativeElement['fucus']();\n      }\n    }\n  }\n\n  writeValue(value: number) {\n    if (this.type === 'percent') {\n      value = moveDigit(value, this.afterPointNum);\n    }\n    this.innerFormControl.patchValue(value);\n    this.renderer.setProperty(this.dummyInput, 'value', this.formatedValue);\n  }\n  registerOnChange(fn: any) {\n    this.onChangePropagate = fn;\n  }\n  registerOnTouched(_: any) {}\n\n}\n",
    "import { Component, OnInit, Input, forwardRef } from '@angular/core';\nimport { FormControl, NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\n@Component({\n  selector: 'afm-textarea',\n  template: `<label *ngIf=\"label\"><span *ngIf=\"required\">*&nbsp;</span>{{ label }}</label>\n<textarea [formControl]=\"formControl\" class=\"form-control\"></textarea>\n<validate-message [control]=\"formControl\"><ng-content></ng-content></validate-message>\n`,\n  styles: [``],\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => AfmTextareaComponent),\n    multi: true\n  }]\n})\nexport class AfmTextareaComponent implements OnInit, ControlValueAccessor {\n\n  @Input() formControl: FormControl;\n  @Input() label: string;\n  public required: boolean;\n\n  constructor() {}\n\n  ngOnInit() {\n    const err = this.formControl.validator && this.formControl.validator(new FormControl());\n    this.required = err && !!err['required'];\n  }\n\n  writeValue(_: any) {}\n  registerOnChange(_: any) {}\n  registerOnTouched(_: any) {}\n\n}\n",
    "import { Component, OnInit, Input } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'validate-message',\n  template: `<span [hidden]=\"!control.touched || control.valid\"><ng-content></ng-content></span>\n`,\n  styles: [`span{position:absolute;color:#fff;top:-15px;right:-10px;padding:7px;background-color:#bd362f;border-radius:7px}span:before{content:\"\";position:absolute;top:100%;left:50%;margin-left:-7px;border:7px solid transparent;border-top:7px solid #bd362f}`]\n})\nexport class AfmValidateMessageComponent implements OnInit {\n\n  @Input() control: FormControl;\n\n  constructor() {}\n\n  ngOnInit() {}\n\n}\n",
    "import { Component, OnInit, Input, forwardRef } from '@angular/core';\nimport { FormControl, NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\n@Component({\n  selector: 'afm-input',\n  template: `<label *ngIf=\"label\"><span *ngIf=\"required\">*&nbsp;</span>{{ label }}</label>\n<input class=\"form-control\"\n  [type]=\"type\" [formControl]=\"formControl\" [readonly]=\"readonly\">\n<validate-message [control]=\"formControl\"><ng-content></ng-content></validate-message>\n`,\n  styles: [``],\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => AfmInputComponent),\n    multi: true\n  }]\n})\nexport class AfmInputComponent implements OnInit, ControlValueAccessor {\n\n  @Input() formControl: FormControl;\n  @Input() label: string;\n  @Input() type = 'text';\n  @Input() set readonly(flag: boolean) {\n    this._readonly = flag;\n  }\n  get readonly() {\n    return this._readonly;\n  }\n  public required: boolean;\n  private _readonly = false;\n\n  constructor() {}\n\n  ngOnInit() {\n    const err = this.formControl.validator && this.formControl.validator(new FormControl());\n    this.required = !!err && !!err['required'];\n  }\n\n  writeValue(_: any) {}\n  registerOnChange(_: any) {}\n  registerOnTouched(_: any) {}\n\n}\n"
  ],
  "names": [],
  "mappings": "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"
}
