{
  "version": 3,
  "file": "angular-form-components.umd.min.js",
  "sources": [
    "ng://angular-form-components/node_modules/tslib/tslib.es6.js",
    "ng://angular-form-components/out/components/input.component.ts",
    "ng://angular-form-components/out/components/number.component.ts",
    "ng://angular-form-components/out/services/filter.service.ts",
    "ng://angular-form-components/out/services/selector-service-injector.ts",
    "ng://angular-form-components/out/services/error-message-factory.service.ts",
    "ng://angular-form-components/out/components/select/select-base.component.ts",
    "ng://angular-form-components/out/components/select/checkbox.component.ts",
    "ng://angular-form-components/out/components/select/radio.component.ts",
    "ng://angular-form-components/out/components/select/select.component.ts",
    "ng://angular-form-components/out/components/select/select2.component.ts",
    "ng://angular-form-components/out/components/single-checkbox.component.ts",
    "ng://angular-form-components/out/components/textarea.component.ts",
    "ng://angular-form-components/out/components/validate-message.component.ts",
    "ng://angular-form-components/out/angular-form-components.module.ts"
  ],
  "sourcesContent": [
    "/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n",
    "import { Component, OnInit, Input, forwardRef } from '@angular/core';\nimport { FormControl, NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\n@Component({\n  selector: 'afc-input',\n  template: `\n    <label *ngIf=\"label\"><span *ngIf=\"required\">*&nbsp;</span>{{ label }}</label>\n    <afc-validate-message [control]=\"formControl\" [name]=\"label\"><ng-content></ng-content></afc-validate-message>\n    <input class=\"form-control\"\n      [type]=\"type\" [formControl]=\"formControl\" [readonly]=\"readonly\">\n  `,\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => AfcInputComponent),\n    multi: true\n  }]\n})\nexport class AfcInputComponent implements OnInit, ControlValueAccessor {\n\n  @Input() formControl: FormControl;\n  @Input() label: string;\n  @Input() type = 'text';\n  @Input() set readonly(flag: boolean) {\n    this._readonly = flag;\n  }\n  get readonly() {\n    return this._readonly;\n  }\n  public required: boolean;\n  private _readonly = false;\n\n  constructor() {}\n\n  ngOnInit() {\n    const err = this.formControl.validator && this.formControl.validator(new FormControl());\n    this.required = !!err && !!err['required'];\n  }\n\n  writeValue(_: any) {}\n  registerOnChange(_: any) {}\n  registerOnTouched(_: any) {}\n\n}\n",
    "import {\n  Component, OnInit, AfterViewInit, Input, Output, EventEmitter,\n  forwardRef, Renderer2, ElementRef, HostListener\n} from '@angular/core';\nimport { FormControl, NG_VALUE_ACCESSOR, ControlValueAccessor, Validators } from '@angular/forms';\n\nfunction moveDigit(decimal: number, moves: number): number {\n  const nums = (decimal || 0).toString().split('.');\n  let prefix = '';\n  if (/^-/.test(nums[0])) {\n    prefix = '-';\n    nums[0] = nums[0].substring(1);\n  }\n  // 小数が 0.0e-00 形式だった場合\n  if (nums[1] && /e-/.test(nums[1])) {\n    const _nums1 = nums[1].split('e-');\n    nums[1] = '0.';\n    for (let i = 1; i < parseInt(_nums1[1], 10); ++i) {\n      nums[1] += '0';\n    }\n    nums[1] += _nums1[0].replace('.', '');\n  }\n  // 正の変換\n  if (moves > 0) {\n    // もともと整数だった場合\n    if (!nums[1]) {\n      return decimal * Math.pow(10, moves);\n    }\n    // 計算結果が整数になる場合\n    if (nums[1].length <= moves) {\n      return parseInt(prefix + nums[0] + nums[1], 10) * Math.pow(10, (moves - nums[1].length));\n    }\n    // それ以外の場合\n    return parseFloat(prefix + nums[0] + nums[1].substr(0, moves) + '.' + nums[1].substr(moves, (nums[1].length - moves)));\n  // 負の変換\n  } else {\n    let base = '0.';\n    if (nums[0] === '0') {\n      for (let i = 0; i > moves; --i) {\n        base += '0';\n      }\n      return parseFloat(prefix + base + nums[1]);\n    }\n    // 計算結果が1より小さくなる場合\n    if (nums[0].length <= -moves) {\n      for (let i = 0; i > (moves + nums[0].length); --i) {\n        base += '0';\n      }\n      return parseFloat(prefix + base + nums[0] + nums[1]);\n    }\n    // それ以外の場合\n    return parseFloat(prefix + nums[0].substr(0, nums[0].length + moves) + '.' + nums[0].substr(nums[0].length + moves, -moves) + nums[1]);\n  }\n}\n\nfunction numberFormat(num, underPoint = -1): string {\n  if (typeof num === 'object') {\n    return '';\n  }\n  if (underPoint > -1) {\n    num = moveDigit(Math.round(moveDigit(num, underPoint)), -underPoint);\n  }\n  return num.toString().split('.').map((str, index) => {\n    return index > 0 ? str : str.split('').reverse()\n      .map((s, i) => s += i && (i % 3 === 0) && s !== '-' ? ',' : '')\n      .reverse().join('');\n  }).join('.');\n}\n\n@Component({\n  selector: 'afc-number',\n  template: `\n    <label *ngIf=\"label\"><span *ngIf=\"required\">*&nbsp;</span>{{ label }}</label>\n    <afc-validate-message [control]=\"formControl\" [name]=\"label\"><ng-content></ng-content></afc-validate-message>\n    <input class=\"form-control\"\n      (blur)=\"onBlur()\"\n      type=\"number\" [formControl]=\"innerFormControl\">\n    <input class=\"form-control\" (focus)=\"onFocus()\" [readonly]=\"readonly\">\n  `,\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => AfcNumberComponent),\n    multi: true\n  }]\n})\nexport class AfcNumberComponent implements OnInit, AfterViewInit, ControlValueAccessor {\n\n  @Input() formControl: FormControl;\n  @Input() label: string;\n  @Input() type = 'number'; // number|percent\n  @Input() afterPointNum = 2;\n  @Input() set readonly(flag: boolean) {\n    this._readonly = flag;\n    this.onBlur(true);\n  }\n  @Output() blur = new EventEmitter();\n  get readonly() {\n    return this._readonly;\n  }\n  public innerType: string;\n  public required: boolean;\n  public innerFormControl: FormControl = new FormControl();\n  get formatedValue() {\n    if (this.type === 'percent') {\n      return numberFormat(this.innerFormControl.value) + '%';\n    }\n    return numberFormat(this.innerFormControl.value);\n  }\n  private _readonly = false;\n  private realInput: any;\n  private dummyInput: any;\n\n  onChangePropagate: any = () => {};\n\n  @HostListener('keydown', ['$event.key'])\n  onKeyDown(key) {\n    switch (key) {\n      case 't':\n        this.innerFormControl.patchValue(moveDigit(this.innerFormControl.value, 3));\n        break;\n      case 'm':\n        this.innerFormControl.patchValue(moveDigit(this.innerFormControl.value, 6));\n        break;\n    }\n  }\n\n  constructor(\n    private renderer: Renderer2,\n    private elm: ElementRef\n  ) {}\n\n  ngOnInit() {\n    const err = this.formControl.validator && this.formControl.validator(new FormControl());\n    this.required = !!err && !!err['required'];\n    this.innerFormControl.setValidators(this.formControl.validator);\n    const inputs = Array.prototype.filter.call(this.elm.nativeElement.childNodes, c => c.nodeName === 'INPUT');\n    this.realInput = inputs[0];\n    this.dummyInput = inputs[1];\n    this.innerFormControl.valueChanges.subscribe(v => {\n      if (this.type === 'percent') {\n        v = moveDigit(v, -this.afterPointNum);\n      }\n      if (v !== this.formControl.value) {\n        this.onChangePropagate(v);\n      }\n    });\n  }\n\n  ngAfterViewInit() {\n    this.onBlur(true);\n  }\n\n  onBlur(noEmit = false) {\n    if (this.realInput) {\n      if (this.innerFormControl.value === '') {\n        this.innerFormControl.patchValue(0);\n      }\n      this.renderer.setStyle(this.realInput, 'display', 'none');\n      this.renderer.setStyle(this.dummyInput, 'display', 'inherit');\n      this.renderer.setProperty(this.dummyInput, 'value', this.formatedValue);\n    }\n    if (!noEmit) {\n      this.blur.emit();\n    }\n  }\n\n  onFocus() {\n    if (!this.readonly) {\n      this.renderer.setStyle(this.dummyInput, 'display', 'none');\n      this.renderer.setStyle(this.realInput, 'display', 'inherit');\n      if (this.innerFormControl.value === 0) {\n        this.innerFormControl.patchValue('');\n      }\n      if (this.elm.nativeElement['fucus']) {\n        this.elm.nativeElement['fucus']();\n      }\n    }\n  }\n\n  writeValue(value: number) {\n    if (this.type === 'percent') {\n      value = moveDigit(value, this.afterPointNum);\n    }\n    this.innerFormControl.patchValue(value);\n    this.renderer.setProperty(this.dummyInput, 'value', this.formatedValue);\n  }\n  registerOnChange(fn: any) {\n    this.onChangePropagate = fn;\n  }\n  registerOnTouched(_: any) {}\n\n}\n",
    "import { AbstractControl } from '@angular/forms';\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\nimport { merge } from 'rxjs/operators';\n\nexport class FilterService {\n    public get onChange() {\n      return this._onChange;\n    }\n    private action$ = new Subject();\n    private _val: any;\n    private _regExp = RegExp('.*');\n    private _onChange: Observable<any>;\n    private _and: FilterService[] = [];\n    private _or: FilterService[] = [];\n\n    static match(form: AbstractControl, target: string): FilterService {\n      return new FilterService(form.valueChanges, target, '~');\n    }\n    static equal(form: AbstractControl, target: string): FilterService {\n      return new FilterService(form.valueChanges, target, '=');\n    }\n    static graterThan(form: AbstractControl, target: string): FilterService {\n      return new FilterService(form.valueChanges, target, '>');\n    }\n    static over(form: AbstractControl, target: string): FilterService {\n      return new FilterService(form.valueChanges, target, '>=');\n    }\n    static lessThan(form: AbstractControl, target: string): FilterService {\n      return new FilterService(form.valueChanges, target, '<');\n    }\n    static under(form: AbstractControl, target: string): FilterService {\n      return new FilterService(form.valueChanges, target, '<=');\n    }\n\n    constructor(\n      private ob: Observable<any>,\n      private _target: string,\n      private _type: string,\n    ) {\n      ob.subscribe(v => {\n        this._val = v;\n        this._regExp = new RegExp(v);\n      });\n      this._onChange = this.action$.pipe(merge(ob));\n    }\n    private check(item: any): boolean {\n      if (!(this._target in item)) {\n        return false;\n      }\n      if (!this._val) {\n        return true;\n      }\n      switch (this._type) {\n        case '~':\n          return !this._val || this._regExp.test(item[this._target]);\n        case '=':\n          return item[this._target] === this._val;\n        case '>':\n          return item[this._target] > this._val;\n        case '>=':\n          return item[this._target] >= this._val;\n        case '<':\n          return item[this._target] < this._val;\n        case '<=':\n          return item[this._target] <= this._val;\n        default:\n          break;\n      }\n      return true;\n    }\n    private checkAll(item: any): boolean {\n      return (this._or.length > 0 && this._or.some(s => s.checkAll(item))) ||\n          this.check(item) &&\n          !this._and.some(s => !s.checkAll(item));\n    }\n    trigger() {\n      this.action$.next(true);\n    }\n    filter<T>(list: T[]): T[] {\n      return list.filter(l => this.checkAll(l));\n    }\n    and(s: FilterService) {\n      this._and.push(s);\n      this._onChange = this._onChange.pipe(merge(s.onChange));\n      return this;\n    }\n    or(s: FilterService) {\n      this._or.push(s);\n      this._onChange = this._onChange.pipe(merge(s.onChange));\n      return this;\n    }\n  }\n",
    "import { Injectable, Injector, InjectionToken, ReflectiveInjector, Inject, Provider } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Subscription } from 'rxjs/Subscription';\n\nexport interface SelectorItem {\n  name: string;\n  value: string|number;\n  default: boolean;\n  sort?: string|number;\n}\n\nexport abstract class Selectable {\n  get forSelectName(): string { throw new Error('unimplemented'); }\n  get forSelectValue(): any { throw new Error('unimplemented'); }\n  get forSelectDefault(): boolean {\n    return false;\n  }\n  get forSelectOrder(): any { throw new Error('unimplemented'); }\n}\n\nexport interface SelectorService {\n  list(): Observable<Selectable[]>;\n  query(_: any): void;\n}\n\nexport interface SelectorServiceMap {\n  map: Map<string, SelectorService>;\n}\n\nexport const MULTI_IMPORT_SERVICES_MAP = new InjectionToken<SelectorServiceMap>('MULTI_IMPORT_SERVICES_MAP');\n\n@Injectable()\nexport class SelectorServiceInjector {\n\n  private providers: SelectorService[];\n\n  constructor(\n    private injector: Injector,\n    @Inject(MULTI_IMPORT_SERVICES_MAP) private services: SelectorServiceMap,\n  ) {\n    this.providers = Array.from(this.services.map.values());\n  }\n\n  get(name: string): any {\n    const _class = this.services.map.get(name);\n    if (_class) {\n      const injector = ReflectiveInjector.resolveAndCreate(<any[]>this.providers, this.injector);\n      return injector.get(_class);\n    }\n    throw new Error(`${name} is not provided!`);\n  }\n\n}\n",
    "import { Injectable, InjectionToken } from '@angular/core';\nimport { ValidationErrors } from '@angular/forms';\n\nexport interface ErrorMessageFactoryService {\n    create(error: ValidationErrors, name: string): string[];\n}\n  \nexport const ERROR_MESSAGE_FACTORY_SERVICE = new InjectionToken<ErrorMessageFactoryService>('ERROR_MESSAGE_FACTORY_SERVICE');\n  \n@Injectable()\nexport class NopeErrorMessageFactoryService implements ErrorMessageFactoryService {\n    constructor() {}\n    create(error: ValidationErrors, name: string) {\n        return [];\n    }\n}\n",
    "import { OnInit, OnChanges, OnDestroy } from '@angular/core';\nimport { ControlValueAccessor, FormControl, Validators } from '@angular/forms';\nimport { Observable } from 'rxjs/Observable';\nimport { ReplaySubject } from 'rxjs/ReplaySubject';\nimport { Subscription } from 'rxjs/Subscription';\nimport { Subject } from 'rxjs/Subject';\nimport { combineLatest, share, filter } from 'rxjs/operators';\n\nimport { SelectorServiceInjector, SelectorService, Selectable, SelectorItem } from '../../services';\n\nclass SelectableConstruct extends Selectable implements SelectorItem {\n  name: string;\n  value: any;\n  default: boolean;\n  sort: string|number;\n  get forSelectName() {\n    return this.name;\n  }\n  get forSelectValue() {\n    return this.value;\n  }\n  get forSelectDefault() {\n    return this.default;\n  }\n  get forSelectOrder() {\n    return this.sort;\n  }\n\n  constructor(data: SelectorItem) {\n    super();\n    this.name = data.name;\n    this.value = data.value;\n    this.default = data.default;\n    this.sort = data.sort !== undefined ? data.sort : data.name;\n  }\n}\n\nclass ArrayService implements SelectorService {\n  private action$ = new ReplaySubject<Selectable[]>(1);\n  constructor() {}\n  list() {\n    return this.action$.pipe(share());\n  }\n  query(list: SelectorItem[]) {\n    this.action$.next(list.map(l => {\n      if (l instanceof Selectable) {\n        return l;\n      }\n      return new SelectableConstruct(l);\n    }));\n  }\n}\n\nlet id = 0;\n\nexport class AfcSelectBase implements OnInit, OnChanges, OnDestroy, ControlValueAccessor {\n\n  protected _service: SelectorService;\n\n  /* @Input */ formControl: FormControl;\n  /* @Input */ sourceName: string;\n  /* @Input */ label: string;\n  /* @Input */ valueType: string;\n  /* @Input */ list: SelectorItem[] = [];\n  /* @Input */ rejects: any[] = [];\n\n  set value(value) {\n    this.onChangePropagate(value);\n  }\n\n  public data: Selectable[];\n  public id: string;\n  public required: boolean;\n  public get _required() {\n    const err = this.formControl.validator && this.formControl.validator(new FormControl());\n    this.required = !!err && !!err['required'];\n    if (this.required) {\n      this.innerFormControl.setValidators(Validators.required);\n    } else {\n      this.innerFormControl.clearValidators();\n    }\n    return this.required;\n  }\n  // valueTypeに関わらずforSelectValueを保持する\n  public innerFormControl = new FormControl();\n  protected dataPrepared$ = new Subject();\n  protected writeValue$ = new Subject();\n  protected subscriptions = new Subscription();\n  private initialized$ = new Subject();\n  private onChangeEventPrepared$ = new Subject();\n  private defaultValue: any = null;\n  private querySubscription: Subscription;\n\n  onChangePropagate: any = () => {};\n\n  constructor(\n    protected services: SelectorServiceInjector\n  ) {\n    this.subscriptions.add(this.dataPrepared$.pipe(filter(v => !!v)).pipe(\n      combineLatest(this.initialized$.pipe(filter(v => !!v))),\n      combineLatest(this.onChangeEventPrepared$.pipe(filter(v => !!v))),\n      combineLatest(this.writeValue$),\n    ).subscribe(v => {\n        let value = <any>v[1];\n        if (value || value === 0) {\n          if (typeof value === 'object' && value.forSelectValue) {\n            value = value.forSelectValue;\n          }\n          this.innerFormControl.patchValue(value);\n          if (!this.validateInnerFormValue()) {\n            this.innerFormControl.patchValue(!this.defaultValue ? this.defaultValue : this.defaultValue.forSelectValue);\n          }\n        } else if (this.innerFormControl.value || this.innerFormControl.value === 0) {\n          this.value = this.innerFormControl.value;\n        }\n      }));\n    this.subscriptions.add(this.dataPrepared$.pipe(filter(v => !!v)).pipe(\n      combineLatest(this.initialized$.pipe(filter(v => !!v))),\n      combineLatest(this.onChangeEventPrepared$.pipe(filter(v => !!v))),\n      combineLatest(this.innerFormControl.valueChanges),\n    ).subscribe(v => {\n        if (this.data && this.valueType === 'object') {\n          v[1] = this.data.find(d => d.forSelectValue === v[1]);\n        }\n        this.value = v[1];\n      }));\n  }\n\n  ngOnInit() {\n    this.id = '_AfcSelect_' + id.toString();\n    id++;\n    this.required = this._required;\n    this.subscriptions.add(this.observer().subscribe(d => {\n      d.sort((a: Selectable, b: Selectable) => {\n        if (a.forSelectOrder > b.forSelectOrder) {\n          return 1;\n        } else if (a.forSelectOrder < b.forSelectOrder) {\n          return -1;\n        }\n        return 0;\n      });\n      this.defaultValue = null;\n      this.data = d.filter(item => {\n        return this.rejects.length === 0 || this.rejects.indexOf(item.forSelectValue) === -1;\n      }).map(item => {\n        if (item.forSelectDefault || this.defaultValue === null) {\n          this.defaultValue = item;\n        }\n        return item;\n      });\n      this.dataPrepared$.next(true);\n      if (!this.validateInnerFormValue()) {\n        if (this._required) {\n          this.writeValue$.next(!this.defaultValue ? this.defaultValue : this.defaultValue.forSelectValue);\n        } else {\n          this.value = null;\n        }\n      }\n    }));\n    this.query();\n    this.initialized$.next(true);\n  }\n\n  ngOnChanges(changes) {\n    if (\n      changes['sourceName'] && changes['sourceName'].currentValue !== changes['sourceName'].previousValue ||\n      changes['list'] && changes['list'].currentValue.length !== changes['list'].previousValue.length ||\n      changes['rejects'] && changes['rejects'].currentValue.length !== changes['rejects'].previousValue.length\n    ) {\n      if (this._service) {\n        this.query();\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.unsubscribe();\n  }\n\n  protected query() {\n    this.dataPrepared$.next(false);\n    const parsed = this._parse(this.sourceName);\n    if ((parsed.name === 'list' || parsed.name === 'range') && this.list) {\n      this._service.query(this.list);\n    } else {\n      this._service.query(parsed.query);\n    }\n  }\n\n  protected existsInSelector(val): boolean {\n    if (!val && val !== 0) {\n      return false;\n    }\n    return this.data.some(item => item.forSelectValue === val);\n  }\n\n  private observer(): Observable<Selectable[]> {\n    if (!this._service) {\n      const parsed = this._parse(this.sourceName);\n      if (parsed.name === 'list') {\n        this._service = new ArrayService();\n      } else if (parsed.name === 'range') {\n        if (parsed.query['to'] === undefined) {\n          throw Error('range.to is required');\n        }\n        parsed.query['from'] = parseInt((parsed.query['from'] || 0), 10);\n        parsed.query['to'] = parseInt((parsed.query['to'] || 0), 10);\n        parsed.query['default'] = parseInt((parsed.query['default'] || 0), 10);\n        parsed.query['step'] = parseInt((parsed.query['step'] || 1), 10);\n        parsed.query['unit'] = parsed.query['unit'] || '';\n        this.list = [];\n        for (let i = parsed.query['from']; i <= parsed.query['to']; i += parsed.query['step']) {\n          this.list.push({\n            name: i.toString() + parsed.query['unit'],\n            value: i,\n            default: i === parsed.query['default'],\n          });\n        }\n        this._service = new ArrayService();\n      } else {\n        const dataSource = this.services.get(parsed.name);\n        if (!dataSource) {\n          throw Error('not exists service: ' + parsed.name);\n        }\n        this._service = dataSource;\n      }\n    }\n    return this._service.list();\n  }\n\n  private _parse(sourceName: string): {name: string, query: Object} {\n    const exploded = sourceName.split(':');\n    const query = {};\n    if (exploded[1]) {\n      exploded[1].split('&').forEach(keyValue => {\n        const kv = keyValue.split('=');\n        if (query[kv[0]] !== undefined) {\n          if (!(query[kv[0]] instanceof Array)) {\n            query[kv[0]] = [query[kv[0]]];\n          }\n          query[kv[0]].push(kv[1]);\n        } else {\n          query[kv[0]] = kv[1];\n        }\n      });\n    }\n    return {\n      name: exploded[0],\n      query: query\n    };\n  }\n\n  private validateInnerFormValue() {\n    return !(\n      this._required && !this.innerFormControl.value && this.innerFormControl.value !== 0 ||\n      !this.existsInSelector(this.innerFormControl.value) &&\n        (!!this.innerFormControl.value || this.innerFormControl.value === 0)\n    );\n  }\n\n  // for ControlValueAccessor\n  writeValue(value: any) {\n    if (!this.isEffectiveValue(value) && this._required) {\n      if (this.isEffectiveValue(this.defaultValue)) {\n        this.writeValue$.next(this.defaultValue.forSelectValue);\n      } else if (this.isEffectiveValue(this.innerFormControl.value)) {\n        this.writeValue$.next(this.innerFormControl.value);\n      }\n      return;\n    }\n    this.writeValue$.next(value);\n  }\n  registerOnChange(fn: any) {\n    this.onChangePropagate = fn;\n    this.onChangeEventPrepared$.next(true);\n  }\n  registerOnTouched(_: any) {}\n\n  private isEffectiveValue(value) {\n    return !!value || value === 0;\n  }\n\n}\n",
    "import { Component, Input, forwardRef, OnInit, Inject } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, FormControl } from '@angular/forms';\nimport { filter, combineLatest, delay } from 'rxjs/operators';\n\nimport { FilterService } from '../../services';\nimport { SelectorServiceInjector, Selectable } from '../../services';\nimport { AfcSelectBase } from './select-base.component';\n\n@Component({\n  selector: 'afc-checkbox',\n  template: `\n    <p>{{ label }}</p>\n    <div *ngIf=\"!!filter\">\n      <div class=\"form-group col-md-12\">\n        <div class=\"col-md-2\">\n          <p class=\"fit\">表示中の選択肢すべてを</p>\n          <button type=\"button\" class=\"btn btn-info btn-sm\" (click)=\"allCheck()\">選択</button>\n          <button type=\"button\" class=\"btn btn-warning btn-sm\" (click)=\"allClear()\">クリア</button>\n        </div>\n      </div>\n    </div>\n    <afc-validate-message [control]=\"formControl\" [name]=\"label\"><ng-content></ng-content></afc-validate-message>\n    <label class=\"checkbox-inline hidden\"></label>\n    <label htmlFor=\"{{ id }}_{{ item.forSelectValue }}\" *ngFor=\"let item of filteredData\"\n        class=\"checkbox-inline custom-checkbox nowrap margin-bottom\">\n      <input id=\"{{ id }}_{{ item.forSelectValue }}\" type=\"checkbox\" class=\"form-control\"\n        (change)=\"onChange($event, item.forSelectValue)\" [checked]=\"value.indexOf(item.forSelectValue) !== -1\">\n      <span [ngClass]=\"{'selected': value.indexOf(item.forSelectValue) !== -1}\"\n        [style.width]=\"width\" [innerHtml]=\"item.forSelectName\"></span>\n    </label>\n  `,\n  styles: [`\n    span.selected {\n      text-decoration: underline;\n      text-decoration-style: double;\n    }\n  `, `\n    label.margin-bottom {\n      margin-bottom: 20px;\n    }\n  `, `\n    p.fit {\n      margin-bottom: 0;\n    }\n  `],\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => AfcCheckboxComponent),\n    multi: true\n  },\n    SelectorServiceInjector\n  ]\n})\nexport class AfcCheckboxComponent extends AfcSelectBase implements OnInit {\n\n  @Input() formControl: FormControl;\n  @Input() sourceName: string;\n  @Input() label: string;\n  @Input() valueType = 'number';\n  @Input() list: any[] = [];\n  @Input() rejects: any[] = [];\n  @Input() filter: FilterService;\n  public filteredData: Selectable[] = [];\n  public width = '';\n  public selectedNames: string[] = [];\n  protected _value: any[];\n  private _detaPrepared = false;\n\n  get value() {\n    return this._value instanceof Array ? this._value : [this._value];\n  }\n  set value(value) {\n    this._value = value instanceof Array ? value : value !== null ? [value] : [];\n    this.onChangePropagate(this.value);\n    this.selectedNames = this.data.filter(l => this._value.indexOf(l.forSelectValue) !== -1).map(l => l.forSelectName);\n  }\n\n  constructor(\n    services: SelectorServiceInjector\n  ) {\n    super(services);\n    this.dataPrepared$.subscribe(v => this._detaPrepared = !!v);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    if (this.filter) {\n      this.subscriptions.add(this.dataPrepared$\n      .pipe(\n        filter(v => !!v),\n        combineLatest(this.filter.onChange),\n        delay(0)\n      )\n      .subscribe(v => {\n        this.filteredData = this.filter.filter(this.data);\n        // FIXME for magic number\n        if (this.filteredData.length > 9) {\n          this.width = (this.filteredData.reduce((prev, d) => {\n            // 実際の文字数より多い数が返る可能性があるが厳密な数値は必要ではないし、長い分には問題ない\n            return prev < d.forSelectName.length ? d.forSelectName.length : prev;\n          }, 0) * 15).toString() + 'px';\n        }\n      }));\n      this.filter.trigger();\n    } else {\n      this.subscriptions.add(this.dataPrepared$\n      .pipe(filter(v => !!v))\n      .subscribe(v => {\n        this.filteredData = this.data.filter(_ => true);\n      }));\n    }\n    // HACK: キャッシュから読む場合など↑でsubscribeする前にnextされてしまってる場合への対処\n    if (this._detaPrepared) {\n      this.dataPrepared$.next(true);\n    }\n  }\n\n  onChange($event, val): void {\n    if ($event.target.checked) {\n      if (this.valueType === 'object') {\n        val = this.data.find(l => l.forSelectValue === val);\n      }\n      this.value = [\n        ...this.value.filter(v => !!v),\n        val\n      ];\n    } else {\n      if (this.valueType === 'object') {\n        this.value = this.value.filter(v => !!v && v.value !== val);\n      } else {\n        this.value = this.value.filter(v => v !== val);\n      }\n    }\n  }\n\n  allCheck() {\n    this.value = [\n      ...this._value,\n      ...this.filteredData.filter(d => this._value.indexOf(d.forSelectValue) === -1).map(d => d.forSelectValue)\n    ];\n  }\n\n  allClear() {\n    const filteredDataArray = this.filteredData.map(d => d.forSelectValue);\n    this.value = this._value.filter(v => filteredDataArray.indexOf(v) === -1);\n  }\n\n  protected existsInSelector(val): boolean {\n    const _val = (!val || val instanceof Array) ? val : [val];\n    return !_val || !_val.length || _val.reduce((prev, curr) => {\n      return prev || this.data.some(item => item.forSelectValue === curr);\n    }, false);\n  }\n\n  writeValue(val) {\n    this._value = val;\n    this.innerFormControl.patchValue(val);\n  }\n\n}\n",
    "import { Component, Input, forwardRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, FormControl } from '@angular/forms';\n\nimport { SelectorServiceInjector, Selectable } from '../../services';\nimport { AfcSelectBase } from './select-base.component';\n\n@Component({\n  selector: 'afc-radio',\n  template: `\n    <p *ngIf=\"!!label\"><span [hidden]=\"!required\">*&nbsp;</span>{{ label }}</p>\n    <afc-validate-message [control]=\"formControl\" [name]=\"label\"><ng-content></ng-content></afc-validate-message>\n    <label htmlFor=\"{{ id }}_{{ item.forSelectValue }}\" *ngFor=\"let item of data\" class=\"radio-inline custom-radio nowrap\">\n      <input id=\"{{ id }}_{{ item.forSelectValue }}\" type=\"radio\" class=\"form-control\" name=\"{{ id }}\"\n        [value]=\"item.forSelectValue\" [formControl]=\"innerFormControl\">\n      <span [innerHtml]=\"item.forSelectName\"></span>\n    </label>\n  `,\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => AfcRadioComponent),\n    multi: true\n  },\n    SelectorServiceInjector\n  ]\n})\nexport class AfcRadioComponent extends AfcSelectBase {\n\n  @Input() formControl: FormControl;\n  @Input() sourceName: string;\n  @Input() label: string;\n  @Input() valueType = 'number';\n  @Input() list: any[] = [];\n  @Input() rejects: any[] = [];\n\n  constructor(\n    services: SelectorServiceInjector\n  ) {\n    super(services);\n  }\n\n}\n",
    "import { Component, Input, forwardRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, FormControl } from '@angular/forms';\nimport { filter, combineLatest } from 'rxjs/operators';\n\nimport { SelectorServiceInjector, Selectable } from '../../services';\nimport { AfcSelectBase } from './select-base.component';\n\n@Component({\n  selector: 'afc-select',\n  template: `\n    <label *ngIf=\"label\" [htmlFor]=\"id\"><span [hidden]=\"!required\">*&nbsp;</span>{{ label }}</label>\n    <ng-container *ngIf=\"!readonly\">\n      <afc-validate-message [control]=\"formControl\" [name]=\"label\"><ng-content></ng-content></afc-validate-message>\n      <select [id]=\"id\" class=\"form-control\" [formControl]=\"innerFormControl\" [required]=\"required\">\n        <option *ngIf=\"!required\" [ngValue]=\"null\"></option>\n        <option *ngFor=\"let item of data\" [ngValue]=\"item.forSelectValue\" [innerHtml]=\"item.forSelectName\"></option>\n      </select>\n    </ng-container>\n    <ng-container *ngIf=\"readonly\">\n      <span class=\"form-control\" readonly [innerHtml]=\"selected?.forSelectName\"></span>\n    </ng-container>\n  `,\n  styles: [`\n    span.selected {\n      text-decoration: underline;\n      text-decoration-style: double;\n    }\n  `],\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => AfcSelectComponent),\n    multi: true\n  },\n    SelectorServiceInjector\n  ]\n})\nexport class AfcSelectComponent extends AfcSelectBase {\n\n  @Input() formControl: FormControl;\n  @Input() sourceName: string;\n  @Input() label: string;\n  @Input() valueType = 'number';\n  @Input() list: any[] = [];\n  @Input() rejects: any[] = [];\n  @Input() set readonly(flag: boolean) {\n    this._readonly = flag;\n  }\n  get readonly() {\n    return this._readonly;\n  }\n  public selected: Selectable = null;\n  private _readonly = false;\n\n  constructor(\n    services: SelectorServiceInjector\n  ) {\n    super(services);\n    this.dataPrepared$.pipe(\n      filter(v => !!v),\n      combineLatest(this.innerFormControl.valueChanges)\n    ).subscribe(v => {\n      this.selected = this.data.find(d => d.forSelectValue === v[1]);\n    });\n  }\n\n}\n",
    "import { Component, Input, ViewChild, ElementRef, OnInit, AfterViewInit, OnDestroy, forwardRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, FormControl } from '@angular/forms';\nimport { Subscription } from 'rxjs/Subscription';\nimport { Subject } from 'rxjs/Subject';\nimport { filter, combineLatest, delay } from 'rxjs/operators';\n\nimport { SelectorServiceInjector, Selectable } from '../../services';\nimport { AfcSelectBase } from './select-base.component';\ndeclare const jQuery: any;\n\n@Component({\n  selector: 'afc-select2',\n  template: `\n    <label><span [hidden]=\"!required\">*&nbsp;</span>{{ label }}</label>\n    <ng-container *ngIf=\"!readonly\">\n      <afc-validate-message [control]=\"formControl\" [name]=\"label\"><ng-content></ng-content></afc-validate-message>\n      <div>\n        <select #selector class=\"form-control\"></select>\n      </div>\n    </ng-container>\n    <ng-container *ngIf=\"readonly\">\n      <span class=\"form-control\" readonly [innerHtml]=\"selected?.forSelectName\"></span>\n    </ng-container>\n  `,\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => AfcSelect2Component),\n    multi: true\n  },\n    SelectorServiceInjector\n  ]\n})\nexport class AfcSelect2Component extends AfcSelectBase implements OnInit, AfterViewInit, OnDestroy {\n\n  @Input() formControl: FormControl;\n  @Input() sourceName: string;\n  @Input() label: string;\n  @Input() valueType = 'number';\n  @Input() list: any[];\n  @Input() rejects: any[] = [];\n  @Input() placeholder = '';\n  @Input() set readonly(flag: boolean) {\n    this._readonly = flag;\n  }\n  get readonly() {\n    return this._readonly;\n  }\n  private _readonly = false;\n  public selected: Selectable = null;\n  @ViewChild('selector') selector: ElementRef;\n  set data(data: Selectable[]) {\n    this._data = data;\n    this.renderSelect2();\n  }\n  get data() {\n    return this._data;\n  }\n  private _data: Selectable[] = [];\n  private element: any;\n  private valueTrigger$ = new Subject();\n  private preparedElement$ = new Subject();\n  protected _value: any;\n  private mySubscriptions = new Subscription();\n\n  onChangePropagate: any = () => {};\n\n  constructor(service: SelectorServiceInjector) {\n    super(service);\n    this.mySubscriptions.add(\n      this.dataPrepared$.pipe(\n        combineLatest(this.preparedElement$),\n        filter(v => !!v[0] && !!v[1]),\n        combineLatest(this.valueTrigger$),\n        delay(0)\n      ).subscribe(v => {\n        if (this.element) {\n          this.element.val(v[1]).trigger('change').trigger('select2:select');\n        }\n        this.selected = this._data.find(d => d.forSelectValue === v[1]);\n      })\n    );\n  }\n\n  ngAfterViewInit() {\n    if (this.selector) {\n      this.element = jQuery(this.selector.nativeElement);\n      this.renderSelect2();\n      this.element.on('select2:select', () => {\n        let val = this.selector.nativeElement.value;\n        // FIXME 文字列だけど数字だけの値を扱うこともあるかもしれない・・・\n        if (/^[0-9]+$/.test(val)) {\n          val = parseInt(val, 10);\n        }\n        if (this._value !== val) {\n          if (this.valueType === 'object') {\n            val = this.data.find(l => l.forSelectValue === val);\n          }\n          this._value = val;\n          this.onChangePropagate(val);\n        }\n      });\n    }\n    this.preparedElement$.next(true);\n    // default値設定のときだけ\n    this.mySubscriptions.add(\n      this.innerFormControl.valueChanges.subscribe(v => {\n        this.valueTrigger$.next(v);\n      })\n    );\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this.mySubscriptions.unsubscribe();\n    if (this.element) {\n      this.element.off('select2:select');\n    }\n  }\n\n  private renderSelect2() {\n    if (!this.element) {\n      return;\n    }\n    if (this.element.hasClass('select2-hidden-accessible') === true) {\n      this.element.select2('destroy');\n      this.element.html('');\n    }\n    this.element.select2({\n      data: this._data.map(d => {\n        return { id: d.forSelectValue, text: d.forSelectName };\n      }),\n      theme: 'bootstrap',\n      placeholder: this.placeholder,\n      allowClear: !this._required\n    });\n    this.valueTrigger$.next(this.formControl.value);\n  }\n\n}\n",
    "import { Component, OnInit, OnDestroy, Input, forwardRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor, FormControl } from '@angular/forms';\nimport { filter } from 'rxjs/operators';\nimport { Subscription } from 'rxjs/Subscription';\n\n@Component({\n  selector: 'afc-single-checkbox',\n  template: `\n    <p *ngIf=\"!!label\"><span *ngIf=\"required\">*&nbsp;</span>{{ label }}</p>\n    <afc-validate-message [control]=\"formControl\" [name]=\"label\"><ng-content></ng-content></afc-validate-message>\n    <label class=\"checkbox-inline custom-checkbox nowrap\">\n      <input type=\"checkbox\" class=\"form-control\" *ngIf=\"!readonly\" [formControl]=\"formControl\">\n      <input type=\"checkbox\" class=\"form-control\" *ngIf=\"readonly\" [formControl]=\"readonlyFormControl\">\n      <span>{{ trueValueLabel }}</span>\n    </label>\n  `,\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => AfcSingleCheckboxComponent),\n    multi: true\n  }]\n})\nexport class AfcSingleCheckboxComponent implements OnInit, OnDestroy, ControlValueAccessor {\n\n  @Input() formControl: FormControl;\n  @Input() label: string;\n  @Input() trueValueLabel: string;\n  @Input() set readonly(flag: boolean) {\n    this._readonly = flag;\n  }\n  get readonly() {\n    return this._readonly;\n  }\n  private _readonly = false;\n  public required = false;\n  private subscription = new Subscription();\n  onChangePropagate: (_: any) => {};\n\n  public readonlyFormControl = new FormControl();\n  constructor() {}\n\n  ngOnInit() {\n    this.readonlyFormControl.disable();\n    this.trueValueLabel = this.trueValueLabel ? this.trueValueLabel : this.label;\n    const err = this.formControl.validator && this.formControl.validator(new FormControl());\n    this.required = err && !!err['required'];\n    this.subscription.add(this.formControl.valueChanges.pipe(filter(v => (!v && v !== false))).subscribe(_ => {\n      this.onChangePropagate(false);\n    }));\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n  writeValue(v: any) {\n    this.readonlyFormControl.patchValue(v);\n  }\n  registerOnChange(fn: any) {\n    this.onChangePropagate = fn;\n  }\n  registerOnTouched(_: any) {}\n\n}\n",
    "import { Component, OnInit, Input, forwardRef } from '@angular/core';\nimport { FormControl, NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\n@Component({\n  selector: 'afc-textarea',\n  template: `\n    <label *ngIf=\"label\"><span *ngIf=\"required\">*&nbsp;</span>{{ label }}</label>\n    <afc-validate-message [control]=\"formControl\" [name]=\"label\"><ng-content></ng-content></afc-validate-message>\n    <textarea [formControl]=\"formControl\" class=\"form-control\"></textarea>\n  `,\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => AfcTextareaComponent),\n    multi: true\n  }]\n})\nexport class AfcTextareaComponent implements OnInit, ControlValueAccessor {\n\n  @Input() formControl: FormControl;\n  @Input() label: string;\n  public required: boolean;\n\n  constructor() {}\n\n  ngOnInit() {\n    const err = this.formControl.validator && this.formControl.validator(new FormControl());\n    this.required = err && !!err['required'];\n  }\n\n  writeValue(_: any) {}\n  registerOnChange(_: any) {}\n  registerOnTouched(_: any) {}\n\n}\n",
    "import { Component, OnInit, OnDestroy, Input, Inject, InjectionToken } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { ErrorMessageFactoryService, ERROR_MESSAGE_FACTORY_SERVICE } from '../services';\nimport { Subscription } from 'rxjs/Subscription';\n\n@Component({\n  selector: 'afc-validate-message',\n  template: `\n    <div>\n      <span class=\"validation-errors\" *ngIf=\"control.touched && control.invalid\">\n        <ng-content></ng-content>\n        <p *ngFor=\"let m of messages\">{{ m }}</p>\n      </span>\n    </div>\n  `,\n  styles: [`\n    div {\n      position: relative;\n    }\n  `, `\n    span.validation-errors {\n      position: absolute;\n      color: #ffffff;\n      bottom: 70%;\n      right: -20px;\n      padding: 7px;\n      background-color: #bd362f;\n      border-radius: 7px;\n      z-index: 10000;\n    }\n  `, `\n    span.validation-errors:before {\n      content: \"\";\n      position: absolute;\n      top: 100%;\n      left: 50%;\n      margin-left: -7px;\n      border: 7px solid transparent;\n      border-top: 7px solid #bd362f;\n      z-index: 10000;\n    }\n  `, `\n    p {\n      margin: 0;\n      padding: 0;\n    }\n  `]\n})\nexport class AfcValidateMessageComponent implements OnInit, OnDestroy {\n\n  @Input() control: FormControl;\n  @Input() name = '';\n  private subscription = new Subscription();\n\n  public messages: string[] = [];\n\n  constructor(\n    @Inject(ERROR_MESSAGE_FACTORY_SERVICE) private messageFactoryService: ErrorMessageFactoryService,\n  ) {}\n\n  ngOnInit() {\n    this.subscription.add(\n      this.control.valueChanges.subscribe(v => {\n        if (this.control.errors) {\n          this.messages = this.messageFactoryService.create(this.control.errors, this.name);\n        }\n      })\n    );\n    if (this.control.errors) {\n      this.messages = this.messageFactoryService.create(this.control.errors, this.name);\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n}\n",
    "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { AfcInputComponent } from './components/input.component';\nimport { AfcNumberComponent } from './components/number.component';\nimport { AfcCheckboxComponent, AfcRadioComponent, AfcSelectComponent, AfcSelect2Component } from './components/select';\nimport { AfcSingleCheckboxComponent } from './components/single-checkbox.component';\nimport { AfcTextareaComponent } from './components/textarea.component';\nimport { AfcValidateMessageComponent } from './components/validate-message.component';\nimport { NopeErrorMessageFactoryService, ERROR_MESSAGE_FACTORY_SERVICE } from './services';\n\nconst COMPONENTS = [\n  AfcInputComponent,\n  AfcNumberComponent,\n  AfcCheckboxComponent,\n  AfcRadioComponent,\n  AfcSelectComponent,\n  AfcSelect2Component,\n  AfcSingleCheckboxComponent,\n  AfcTextareaComponent,\n  AfcValidateMessageComponent,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  providers: [\n    NopeErrorMessageFactoryService,\n  {\n    provide: ERROR_MESSAGE_FACTORY_SERVICE,\n    useExisting: NopeErrorMessageFactoryService,\n  }],\n  declarations: [...COMPONENTS],\n  exports:[...COMPONENTS]\n})\nexport class AngularFormComponentsModule {}\n"
  ],
  "names": [
    "extendStatics",
    "Object",
    "setPrototypeOf",
    "__proto__",
    "Array",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__extends",
    "__",
    "this",
    "constructor",
    "prototype",
    "create",
    "__read",
    "o",
    "n",
    "m",
    "Symbol",
    "iterator",
    "r",
    "e",
    "i",
    "call",
    "ar",
    "next",
    "done",
    "push",
    "value",
    "error",
    "__spread",
    "arguments",
    "length",
    "concat",
    "AfcInputComponent",
    "type",
    "_readonly",
    "defineProperty",
    "get",
    "set",
    "flag",
    "ngOnInit",
    "err",
    "formControl",
    "validator",
    "FormControl",
    "required",
    "writeValue",
    "_",
    "registerOnChange",
    "registerOnTouched",
    "moveDigit",
    "decimal",
    "moves",
    "nums",
    "toString",
    "split",
    "prefix",
    "test",
    "substring",
    "_nums1",
    "parseInt",
    "replace",
    "Math",
    "pow",
    "parseFloat",
    "substr",
    "base",
    "numberFormat",
    "num",
    "underPoint",
    "round",
    "map",
    "str",
    "index",
    "reverse",
    "s",
    "join",
    "Component",
    "args",
    "selector",
    "template",
    "providers",
    "provide",
    "NG_VALUE_ACCESSOR",
    "useExisting",
    "forwardRef",
    "multi",
    "Input",
    "label",
    "readonly",
    "AfcNumberComponent",
    "renderer",
    "elm",
    "afterPointNum",
    "blur",
    "EventEmitter",
    "innerFormControl",
    "onChangePropagate",
    "onBlur",
    "onKeyDown",
    "key",
    "patchValue",
    "_this",
    "setValidators",
    "inputs",
    "filter",
    "nativeElement",
    "childNodes",
    "c",
    "nodeName",
    "realInput",
    "dummyInput",
    "valueChanges",
    "subscribe",
    "v",
    "ngAfterViewInit",
    "noEmit",
    "setStyle",
    "setProperty",
    "formatedValue",
    "emit",
    "onFocus",
    "fn",
    "Renderer2",
    "ElementRef",
    "Output",
    "HostListener",
    "FilterService",
    "ob",
    "_target",
    "_type",
    "action$",
    "Subject",
    "_regExp",
    "RegExp",
    "_and",
    "_or",
    "_val",
    "_onChange",
    "pipe",
    "merge",
    "match",
    "form",
    "target",
    "equal",
    "graterThan",
    "over",
    "lessThan",
    "under",
    "check",
    "item",
    "checkAll",
    "some",
    "trigger",
    "list",
    "l",
    "and",
    "onChange",
    "or",
    "Selectable",
    "Error",
    "MULTI_IMPORT_SERVICES_MAP",
    "InjectionToken",
    "SelectorServiceInjector",
    "injector",
    "services",
    "from",
    "values",
    "name",
    "_class",
    "ReflectiveInjector",
    "resolveAndCreate",
    "Injectable",
    "Injector",
    "undefined",
    "decorators",
    "Inject",
    "ERROR_MESSAGE_FACTORY_SERVICE",
    "NopeErrorMessageFactoryService",
    "SelectableConstruct",
    "_super",
    "data",
    "default",
    "sort",
    "tslib_1.__extends",
    "ArrayService",
    "ReplaySubject",
    "share",
    "query",
    "id",
    "AfcSelectBase",
    "rejects",
    "dataPrepared$",
    "writeValue$",
    "subscriptions",
    "Subscription",
    "initialized$",
    "onChangeEventPrepared$",
    "defaultValue",
    "add",
    "combineLatest",
    "forSelectValue",
    "validateInnerFormValue",
    "valueType",
    "find",
    "Validators",
    "clearValidators",
    "_required",
    "observer",
    "a",
    "forSelectOrder",
    "indexOf",
    "forSelectDefault",
    "ngOnChanges",
    "changes",
    "currentValue",
    "previousValue",
    "_service",
    "ngOnDestroy",
    "unsubscribe",
    "parsed",
    "_parse",
    "sourceName",
    "existsInSelector",
    "val",
    "dataSource",
    "exploded",
    "forEach",
    "keyValue",
    "kv",
    "isEffectiveValue",
    "AfcCheckboxComponent",
    "filteredData",
    "width",
    "selectedNames",
    "_detaPrepared",
    "_value",
    "forSelectName",
    "delay",
    "reduce",
    "prev",
    "$event",
    "checked",
    "allCheck",
    "allClear",
    "filteredDataArray",
    "curr",
    "styles",
    "AfcRadioComponent",
    "AfcSelectComponent",
    "selected",
    "AfcSelect2Component",
    "service",
    "placeholder",
    "_data",
    "valueTrigger$",
    "preparedElement$",
    "mySubscriptions",
    "element",
    "renderSelect2",
    "jQuery",
    "on",
    "off",
    "hasClass",
    "select2",
    "html",
    "text",
    "theme",
    "allowClear",
    "ViewChild",
    "AfcSingleCheckboxComponent",
    "subscription",
    "readonlyFormControl",
    "disable",
    "trueValueLabel",
    "AfcTextareaComponent",
    "AfcValidateMessageComponent",
    "messageFactoryService",
    "messages",
    "control",
    "errors",
    "COMPONENTS",
    "AngularFormComponentsModule",
    "NgModule",
    "imports",
    "CommonModule",
    "FormsModule",
    "ReactiveFormsModule",
    "declarations",
    "exports"
  ],
  "mappings": "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"
}
